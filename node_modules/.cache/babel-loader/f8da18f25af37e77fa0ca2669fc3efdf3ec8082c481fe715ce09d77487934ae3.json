{"ast":null,"code":"var _jsxFileName = \"C:\\\\Imdb-clone\\\\src\\\\components\\\\MovieDetails.js\",\n  _s = $RefreshSig$();\n// for fetched the movie details\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://www.omdbapi.com/\";\nconst API_KEY = \"66f12840\";\nconst MovieDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  //   fetched data \n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await fetch(`${API_URL}?apikey=${API_KEY}&i=${id}`);\n        const data = await response.json();\n        if (data.Response === \"True\") {\n          setMovie(data);\n        } else {\n          console.error(\"Movie not found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching movie details:\", error);\n      }\n    };\n    fetchMovieDetails();\n  }, [id]);\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No movie details available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [movie.Title || \"Title not available\", \" (\", movie.Year || \"Year not available\", \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.Poster && movie.Poster !== \"N/A\" ? movie.Poster : \"https://via.placeholder.com/300x450\",\n      alt: `${movie.Title} poster`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Director:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this), \" \", movie.Director]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Plot:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }, this), \" \", movie.Plot]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Rating:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this), \" \", movie.imdbRating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetails, \"2DI+WM1NP8orkt5lpnG0LvHIzCE=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","API_URL","API_KEY","MovieDetails","_s","id","movie","setMovie","fetchMovieDetails","response","fetch","data","json","Response","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","Title","Year","src","Poster","alt","Director","Plot","imdbRating","_c","$RefreshReg$"],"sources":["C:/Imdb-clone/src/components/MovieDetails.js"],"sourcesContent":["// for fetched the movie details\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst API_URL = \"https://www.omdbapi.com/\"\r\nconst API_KEY = \"66f12840\";\r\n\r\n\r\nconst MovieDetails = () => {\r\n  const { id } = useParams(); \r\n  const [movie, setMovie] = useState(null); \r\n  \r\n//   fetched data \r\n  useEffect(() => {\r\n    const fetchMovieDetails = async () => {\r\n      try {\r\n        const response = await fetch(`${API_URL}?apikey=${API_KEY}&i=${id}`);\r\n        const data = await response.json();\r\n\r\n        if (data.Response === \"True\") {\r\n          setMovie(data);\r\n        } else {\r\n          console.error(\"Movie not found\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching movie details:\", error);\r\n      } \r\n    };\r\n    fetchMovieDetails(); \r\n  }, [id]);\r\n\r\n  if (!movie) {\r\n    return <div>No movie details available.</div>; \r\n  }\r\n\r\n  return (\r\n    \r\n    <div>\r\n      <h1>{movie.Title || \"Title not available\"} ({movie.Year || \"Year not available\"})</h1>\r\n      <img \r\n        src={movie.Poster && movie.Poster !== \"N/A\" ? movie.Poster : \"https://via.placeholder.com/300x450\"} \r\n        alt={`${movie.Title} poster`} \r\n      />\r\n      <p><strong>Director:</strong> {movie.Director}</p>\r\n      {/* <p><strong>Director:</strong> {movie.Director || \"N/A\"}</p> */}\r\n      <p><strong>Plot:</strong> {movie.Plot}</p>\r\n      <p><strong>Rating:</strong> {movie.imdbRating}</p>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}