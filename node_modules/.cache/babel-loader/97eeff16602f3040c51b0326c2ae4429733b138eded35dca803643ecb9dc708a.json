{"ast":null,"code":"var _jsxFileName = \"C:\\\\Imdb-clone\\\\src\\\\components\\\\MovieDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://www.omdbapi.com/\";\nconst API_KEY = \"66f12840\";\nconst MovieDetails = () => {\n  _s();\n  const {\n    imdbID\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Fetch movie details\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      if (!imdbID) {\n        setError(\"Invalid IMDb ID\");\n        return;\n      }\n      try {\n        const response = await fetch(`${API_URL}?apikey=${API_KEY}&i=${imdbID}`);\n        const data = await response.json();\n        if (data.Response === \"True\") {\n          setMovie(data);\n        } else {\n          console.error(\"Movie not found\");\n          setError(\"Movie not found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching movie details:\", error);\n        setError(\"Error fetching movie details\");\n      }\n    };\n    fetchMovieDetails();\n  }, [imdbID]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading movie details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [(movie === null || movie === void 0 ? void 0 : movie.Title) || \"N/A\", \" (\", (movie === null || movie === void 0 ? void 0 : movie.Year) || \"N/A\", \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), movie.Poster && movie.Poster !== \"N/A\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.Poster,\n      alt: `${movie.Title} poster`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No poster available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Director:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 10\n      }, this), \" \", (movie === null || movie === void 0 ? void 0 : movie.Director) || \"N/A\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Plot:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }, this), \" \", (movie === null || movie === void 0 ? void 0 : movie.Plot) || \"N/A\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Rating:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }, this), \" \", (movie === null || movie === void 0 ? void 0 : movie.imdbRating) || \"N/A\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetails, \"k7/eMm/kM/v7nwiwDccBzXTv9as=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","API_URL","API_KEY","MovieDetails","_s","imdbID","movie","setMovie","error","setError","fetchMovieDetails","response","fetch","data","json","Response","console","children","fileName","_jsxFileName","lineNumber","columnNumber","Title","Year","Poster","src","alt","Director","Plot","imdbRating","_c","$RefreshReg$"],"sources":["C:/Imdb-clone/src/components/MovieDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst API_URL = \"https://www.omdbapi.com/\";\r\nconst API_KEY = \"66f12840\";\r\n\r\nconst MovieDetails = () => {\r\n  const { imdbID } = useParams(); \r\n  const [movie, setMovie] = useState(null); \r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch movie details\r\n  useEffect(() => {\r\n    const fetchMovieDetails = async () => {\r\n      if (!imdbID) {\r\n        setError(\"Invalid IMDb ID\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(`${API_URL}?apikey=${API_KEY}&i=${imdbID}`);\r\n        const data = await response.json();\r\n\r\n        if (data.Response === \"True\") {\r\n          setMovie(data);\r\n        } else {\r\n          console.error(\"Movie not found\");\r\n          setError(\"Movie not found\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching movie details:\", error);\r\n        setError(\"Error fetching movie details\");\r\n      } \r\n    };\r\n\r\n    fetchMovieDetails(); \r\n  }, [imdbID]);\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  if (!movie) {\r\n    return <div>Loading movie details...</div>; \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{movie?.Title || \"N/A\"} ({movie?.Year || \"N/A\"})</h1>\r\n      {movie.Poster && movie.Poster !== \"N/A\" ? (\r\n        <img src={movie.Poster} alt={`${movie.Title} poster`} />\r\n      ) : (\r\n        <p>No poster available</p>\r\n      )}\r\n      <p><strong>Director:</strong> {movie?.Director || \"N/A\"}</p>\r\n      <p><strong>Plot:</strong> {movie?.Plot || \"N/A\"}</p>\r\n      <p><strong>Rating:</strong> {movie?.imdbRating || \"N/A\"}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}